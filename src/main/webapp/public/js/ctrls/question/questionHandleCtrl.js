// Generated by CoffeeScript 1.10.0
define(['can/control', 'can', 'Auth', 'base', 'reqwest', 'bootbox', 'localStorage', 'select2cn', 'datepickercn', 'datatables.net', 'datatables.net-bs'], function(Ctrl, can, Auth, base, reqwest, bootbox, localStorage) {
  return Ctrl.extend({
    init: function(el, data) {
      var generateRow, handleQuestion, questionInfo;
      if (!can.base) {
        new base('', data);
      }
      questionInfo = new can.Map({
        closed: false,
        handlerId: data.type === 'all' ? 0 : -1
      });
      this.element.html(can.view('../public/view/home/question/questionHandle.html', questionInfo));
      handleQuestion = function(question, btn) {
        if (data.type === 'all') {
          reqwest({
            url: Auth.apiHost + "question/toggleTop/" + question.id,
            method: "put",
            type: 'html'
          }).then(function() {
            if (question.toTop === 0) {
              $(btn).text('撤销').closest('.panel').removeClass('panel-info').addClass('panel-danger');
              $(btn).closest('.row').insertAfter('#tempDialog');
              return question.toTop = 1;
            } else {
              $(btn).text('置顶').closest('.panel').removeClass('panel-danger').addClass('panel-info');
              return $(btn).closest('.row').appendTo('#page-wrapper');
            }
          }).fail(function() {
            return bootbox.alert('置顶失败');
          });
          return;
        }
        bootbox.dialog({
          title: '案例处理',
          message: $('#tempDialog').html(),
          buttons: {
            success: {
              label: '确认',
              className: 'btn-success',
              callback: function() {
                var k, obj, v;
                obj = $('.bootbox-body form').serializeObject();
                if (obj.handlePromisedate) {
                  obj.handlePromisedate = $('.bootbox-body .input-group.date input').datepicker('getDate');
                }
                for (k in obj) {
                  v = obj[k];
                  if (!v) {
                    delete obj[k];
                  }
                }
                return reqwest({
                  url: Auth.apiHost + "question/handle/" + question.id,
                  method: "put",
                  data: obj,
                  type: 'html'
                }).then(function() {
                  bootbox.alert('处理成功');
                  if (obj.handleStatus === '2') {
                    return $(btn).closest('.row').hide();
                  }
                }).fail(function() {
                  return bootbox.alert('处理失败！');
                });
              }
            }
          }
        });
        $('.bootbox-body select[name="handleStatus"]').unbind('change').bind('change', function() {
          switch (Number($(this).val())) {
            case 0:
              return $('.handlePromisedate,.handleResult', $(this).closest('form')).addClass('hide');
            case 1:
              $('.handleResult textarea', $(this).closest('form')).val('');
              $('.handlePromisedate', $(this).closest('form')).removeClass('hide');
              return $('.handleResult', $(this).closest('form')).addClass('hide');
            case 2:
              $('.handlePromisedate input', $(this).closest('form')).datepicker('setDate', null);
              $('.handlePromisedate', $(this).closest('form')).addClass('hide');
              return $('.handleResult', $(this).closest('form')).removeClass('hide');
          }
        }).select2({
          language: 'zh-CN',
          theme: "bootstrap",
          data: [
            {
              id: 0,
              text: '未进行'
            }, {
              id: 1,
              text: '进行中'
            }, {
              id: 2,
              text: '完成'
            }
          ]
        });
        return $('.bootbox-body .input-group.date input').datepicker({
          language: 'zh-CN',
          startDate: "0d",
          todayBtn: true,
          autoclose: true
        });
      };
      generateRow = function(question) {
        var $body, $btn, $header, $row, $table, cls, ref, ref1, ref2, ref3;
        cls = question.closed ? 'panel-warning' : 'panel-info';
        cls = question.toTop ? 'panel-danger' : 'panel-info';
        $row = $('<div class="row question"><div class="col-lg-10 col-lg-offset-1"><div class="panel ' + cls + '"><div></div></div>');
        $header = $('<div class="panel-heading clearfix"><div>');
        $header.append($('<div class="panel-title pull-left"/>').text("编号：" + question.number));
        if (!question.closed) {
          $btn = $('<button class="btn btn-default btn-sm" type="button"><span class="glyphicon glyphicon-close" aria-hidden="true">处理</span></button').bind('click', function(e) {
            return handleQuestion(question, this);
          });
          if (data.type === 'all') {
            if (question.toTop === 0) {
              $btn.text('置顶');
            } else {
              $btn.text('撤销');
            }
          }
          $header.append($('<div class="btn-group pull-right"></div>').append($btn));
        }
        $('.panel', $row).append($header);
        $body = $('<div class="panel-body"></div>');
        $body.append($('<p/>').text("项目：" + question.project));
        $body.append($('<p/>').text("问题类型：" + question.type));
        $body.append($('<p/>').text("城市：" + ((ref = question.city) != null ? ref.name : void 0)));
        if (!question.closed) {
          $body.append($('<p/>').text("项目发起时间：" + (question.startdate ? new Date(question.startdate).toLocaleDateString() : '')));
          $body.append($('<p/>').text("要求结束时间：" + (question.promisedate ? new Date(question.promisedate).toLocaleDateString() : '')));
        }
        $body.append($('<p/>').text("问题描述：" + question.description));
        if (question.closed) {
          $body.append($('<p/>').text("解决回馈：" + question.feedback));
        }
        $body.append($('<p/>').text("发起人：" + (((ref1 = question.creator) != null ? ref1.username : void 0) || ((ref2 = question.creator) != null ? ref2.loginid : void 0) || '')));
        $body.append($('<p/>').text("提交时间：" + (question.created ? new Date(question.created).toLocaleString() : '')));
        $body.append($('<p/>').text("处理状态：" + (question.handleStatus ? '进行中' : '未进行')));
        if (question.handlePromisedate) {
          $body.append($('<p/>').text("处理预计完成时间：" + (question.handlePromisedate ? new Date(question.handlePromisedate).toLocaleDateString() : '')));
        }
        if (((ref3 = question.attachmentList) != null ? ref3.length : void 0) > 0) {
          $table = $('#tempAttachmentList').clone().removeAttr('id').removeClass('hide');
          $table.DataTable({
            paging: false,
            ordering: false,
            searching: false,
            info: false,
            data: question.attachmentList,
            columns: [
              {
                data: 'filename',
                render: function(data, d, row) {
                  return "<a href='" + Auth.apiHost + "question/attachment/" + row.id + "/download'>" + data + "</a>";
                }
              }, {
                data: 'uploaded',
                render: function(data) {
                  if (data) {
                    return new Date(data).toLocaleString();
                  } else {
                    return new Date().toLocaleString();
                  }
                }
              }, {
                data: 'size'
              }, {
                data: 'uploader',
                render: function(data) {
                  return (data != null ? data.username : void 0) || (data != null ? data.email : void 0) || '';
                }
              }
            ]
          });
          $body.append($('<p/>').text("附件："));
          $body.append($('<p/>').append($table));
        }
        $('.panel', $row).append($body);
        return $('#page-wrapper').append($row);
      };
      reqwest(Auth.apiHost + "dict/projects?_=" + (Date.now())).then(function(data) {
        data = _.map(data, function(d) {
          return {
            id: d.text,
            text: d.text
          };
        });
        data.unshift({
          id: 'unselected',
          text: '不限'
        });
        return $('#project').select2({
          language: 'zh-CN',
          theme: "bootstrap",
          data: data
        });
      });
      reqwest(Auth.apiHost + "dict/types/ms?_=" + (Date.now())).then(function(data) {
        data = _.map(data, function(d) {
          return {
            id: d.text,
            text: d.text
          };
        });
        data.unshift({
          id: 'unselected',
          text: '不限'
        });
        return $('#type').select2({
          language: 'zh-CN',
          theme: "bootstrap",
          data: data
        });
      });
      reqwest(Auth.apiHost + "user/all?_=" + (Date.now())).then(function(data) {
        data = _.map(data, function(d) {
          return {
            id: d.id,
            text: d.username || d.loginid
          };
        });
        data.unshift({
          id: 'unselected',
          text: '不限'
        });
        return $('#creatorId').select2({
          language: 'zh-CN',
          theme: "bootstrap",
          data: data
        });
      });
      $('#category').select2({
        language: 'zh-CN',
        theme: "bootstrap",
        data: [
          {
            id: 'unselected',
            text: '不限'
          }, {
            id: 'WMS',
            text: 'WMS'
          }, {
            id: 'TMS',
            text: 'TMS'
          }
        ]
      });
      $('#handleStatus').select2({
        language: 'zh-CN',
        theme: "bootstrap",
        data: [
          {
            id: 'unselected',
            text: '不限'
          }, {
            id: 0,
            text: '未进行'
          }, {
            id: 1,
            text: '进行中'
          }
        ]
      });
      $('#searchForm button').unbind('click').bind('click', function(e) {
        var k, search, v;
        $('#page-wrapper>.row.question').remove();
        search = $('#searchForm').serializeObject();
        for (k in search) {
          v = search[k];
          if (!v || v === 'unselected') {
            delete search[k];
          }
        }
        return reqwest({
          url: Auth.apiHost + "question/page?_=" + (Date.now()),
          data: search
        }).then(function(data) {
          return _.each(data, function(question) {
            return generateRow(question);
          });
        });
      });
      return $('#searchForm button').trigger('click');
    }
  });
});

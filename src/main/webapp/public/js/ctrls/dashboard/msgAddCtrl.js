// Generated by CoffeeScript 1.10.0
define(['can/control', 'can', 'base', 'Auth', 'reqwest', 'bootbox', '_', 'select2cn', 'datepickercn', 'validate'], function(Control, can, base, Auth, reqwest, bootbox) {
  return Control.extend({
    init: function(el, data) {
      var msgData;
      msgData = new can.Map();
      this.element.html(can.view('../public/view/home/dashboard/bulletinNew.html', msgData));
      $('#function').select2({
        language: 'zh-CN',
        theme: "bootstrap",
        placeholder: 'Select a Function'
      });
      $('#elc').select2({
        language: 'zh-CN',
        theme: "bootstrap",
        placeholder: 'Select an ELC'
      });
      $('.input-group.date input').datepicker({
        language: 'zh-CN',
        startDate: "0d",
        todayBtn: true,
        autoclose: true
      });
      reqwest(Auth.apiHost + "dict/projects?_=" + (Date.now())).then(function(data) {
        data = _.map(data, function(d) {
          return {
            id: d.text,
            text: d.text
          };
        });
        return $('#projectName').select2({
          language: 'zh-CN',
          theme: "bootstrap",
          data: data,
          placeholder: 'Select a Project'
        });
      });
      reqwest(Auth.apiHost + "dict/bulletinTypes?_=" + (Date.now())).then(function(data) {
        data = _.map(data, function(d) {
          return {
            id: d.text,
            text: d.text
          };
        });
        return $('#type').select2({
          language: 'zh-CN',
          theme: "bootstrap",
          data: data,
          placeholder: 'Select a Type'
        });
      });

      /**
       * 获取pm组事件参与人
       */
      return $('#submitBtn').unbind('click').bind('click', function() {
        var msgObj;
        if (!$('form').valid()) {
          return;
        }
        msgObj = $('form').serializeObject();
        msgObj.date = $('#date').datepicker('getDate');
        if (msgObj.teammates && msgObj.teammates.length > 0) {
          if (_.isString(msgObj.teammates)) {
            msgObj.teammates = [msgObj.teammates];
          }
          msgObj.receivers = _.map(msgObj.teammates, function(e, i) {
            return {
              id: e
            };
          });
        }
        delete msgObj.teammates;
        return reqwest({
          url: Auth.apiHost + "msg/create",
          method: 'post',
          data: JSON.stringify(msgObj),
          contentType: "application/json",
          type: 'html'
        }).then(function() {
          return bootbox.alert('发布成功！', function() {
            return location.hash = '#!home/msgDashboard';
          });
        }).fail(function(err) {
          return bootbox.alert("发布失败！" + err.responseText);
        });
      });
    }
  });
});

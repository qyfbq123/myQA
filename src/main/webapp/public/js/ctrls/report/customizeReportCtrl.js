// Generated by CoffeeScript 1.10.0
define(['can/control', 'can', 'Auth', 'base', 'reqwest', 'localStorage', 'bootbox', 'datatables.net', 'datatables.net-bs', 'datatables.net-responsive', 'datatables.net-responsive-bs', 'datepickercn', 'validate', '_'], function(Ctrl, can, Auth, base, reqwest, localStorage, bootbox) {
  return Ctrl.extend({
    init: function(el, data) {
      var $reportTable, colsManager, pageData, showColumns;
      if (!can.base) {
        new base('', data);
      }
      pageData = new can.Map();
      this.element.html(can.view('../public/view/home/report/customizeReport.html', pageData));
      colsManager = {
        instance: null,
        saveCols: function(columns) {
          if (colsManager.instance) {
            window.clearTimeout(colsManager.instance);
          }
          return colsManager.instance = window.setTimeout((function() {
            var ucrColumns;
            if (columns != null ? columns : columns = $('#columns').data('columns')) {
              columns = _.map(columns, function(e) {
                return {
                  title: e.title,
                  data: e.data,
                  visible: e.visible
                };
              });
              ucrColumns = {
                id: $('#columns').data('id'),
                crId: data.id,
                columns: JSON.stringify(columns)
              };
              return $.post(Auth.apiHost + "/customize/report/columns/save", ucrColumns, function(data) {
                return $('#columns').data('id', data.id);
              });
            }
          }), 2000);
        }
      };
      showColumns = function() {
        var columns;
        columns = $('#columns').data('columns');
        return _.each(columns, function(e) {
          var $input, $label;
          $label = $('<label/>').text(e.title);
          $input = $('<input type="checkbox" name="column"/>').prop('checked', e.visible).val(e.title).prependTo($label);
          return $('#column').append($label);
        });
      };
      reqwest({
        url: Auth.apiHost + "customize/report/" + data.id + "?_=" + (Date.now()),
        method: 'get'
      }).then(function(data) {
        pageData.attr(data);
        _.each([1, 2, 3, 4, 5, 6], function(e) {
          var $param;
          if (data["param" + e]) {
            switch (data["type" + e]) {
              case 'date':
                $param = $('#tempDate').clone();
                break;
              case 'number':
                $param = $('#tempNumber').clone();
                break;
              default:
                $param = $('#temp').clone();
            }
            $('label', $param).attr('for', "param" + e).text(data["param" + e]);
            $('input', $param).attr('id', "param" + e).attr('name', "param" + e).attr('required', 'required');
            return $param.removeClass('hide').appendTo($('#params'));
          }
        });
        $('.input-group.date input').datepicker({
          language: 'zh-CN',
          todayBtn: true,
          autoclose: true
        });
        return $('#params>.hide').remove();
      }).fail(function(err) {
        return bootbox.alert("获取自定义报表失败！该自定义报表可能已被移除，请刷新后再试！" + err.responseText);
      });
      reqwest({
        url: Auth.apiHost + "customize/report/" + data.id + "/columns?_=" + (Date.now()),
        method: 'get'
      }).then(function(data) {
        if (data != null ? data.id : void 0) {
          $('#columns').data('id', data.id);
        }
        if (data != null ? data.columns : void 0) {
          $('#columns').data('columns', JSON.parse(data.columns));
          return showColumns();
        }
      }).fail(function(err) {
        return bootbox.alert("获取自定义列失败！" + err.responseText);
      });
      $.fn.dataTable.ext.errMode = 'none';
      $('#columns').on('change', function(e) {
        var $col, columns;
        $col = $(e.target);
        columns = $('#columns').data('columns');
        return _.each(columns, function(col, i) {
          var visible;
          if (col.data === $col.val()) {
            visible = $col.is(':checked');
            $reportTable.column(i).visible(visible);
            $reportTable.columns.adjust().draw(false);
            col.visible = visible;
            $('#columns').data('columns', columns);
            return colsManager.saveCols();
          }
        });
      });
      $reportTable = null;
      return $('#btnGroup').on('click', '.btn', function(e) {
        var _href, report;
        if (!$('form').valid()) {
          return;
        }
        report = $.extend({}, pageData.attr(), $('form').serializeObject());
        delete report['created'];
        delete report['modified'];
        delete report['groupList'];
        $('.input-group.date input').each(function(i, e) {
          return report[$(this).attr('name')] = String(Number($(this).datepicker('getDate')));
        });
        switch ($(e.target).attr('id')) {
          case 'setBtn':
            return $('#columns').toggleClass('hide');
          case 'selectBtn':
            return reqwest({
              url: Auth.apiHost + "customize/report/run",
              data: report,
              method: "get"
            }).then(function(data) {
              var columns;
              if (data && data[0]) {
                if (!$reportTable) {
                  if (!(columns = $('#columns').data('columns'))) {
                    columns = _.map(data[0], function(v, k) {
                      return {
                        title: k,
                        data: k,
                        visible: true
                      };
                    });
                    $('#columns').data('columns', columns);
                    showColumns();
                    colsManager.saveCols();
                  }
                  return $reportTable = $('#reportTable').DataTable({
                    data: data,
                    columns: columns
                  });
                } else {
                  $reportTable.clear();
                  $reportTable.rows.add(data);
                  return $reportTable.draw();
                }
              } else if ($reportTable) {
                $reportTable.clear();
                return $reportTable.draw();
              }
            }).fail(function(err) {
              return bootbox.alert("获取自定义运行失败！" + err.responseText);
            });
          case 'downloadBtn':
            _href = Auth.apiHost + "customize/report/download?_=" + (Date.now()) + "&id=" + report['id'] + "&name=" + report.name + "&";
            _href += (_.map([1, 2, 3, 4, 5, 6], function(e) {
              return "param" + e + "=" + report['param' + e] + "&type" + e + "=" + report['type' + e];
            })).join('&');
            return $(e.target).attr('href', _href);
          case 'mailBtn':
            return reqwest({
              url: Auth.apiHost + "customize/report/push?_=" + (Date.now()),
              data: report,
              type: 'html'
            }).then(function(data) {
              return bootbox.alert('推送成功！');
            }).fail(function() {
              return bootbox.alert('推送失败！');
            });
        }
      });
    }
  });
});

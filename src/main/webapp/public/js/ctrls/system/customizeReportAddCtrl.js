// Generated by CoffeeScript 1.10.0
define(['can/control', 'can', 'Auth', 'base', 'reqwest', 'bootbox', 'localStorage', 'select2cn', '_', 'validate'], function(Ctrl, can, Auth, base, reqwest, bootbox, localStorage) {
  return Ctrl.extend({
    init: function(el, data) {
      var addPageData, isNew, k, tmpCustomizeReport, v;
      if (!can.base) {
        new base('', data);
      }
      addPageData = new can.Map({
        pageType: '新增'
      });
      this.element.html(can.view('../public/view/home/system/customizeReportAdd.html', addPageData));
      isNew = window.location.hash.endsWith('customizeReportAdd');
      if (!isNew) {
        addPageData.attr('pageType', '修改');
        tmpCustomizeReport = localStorage.get('tmpCustomizeReport');
        if (tmpCustomizeReport) {
          for (k in tmpCustomizeReport) {
            v = tmpCustomizeReport[k];
            if (!_.isObject(v)) {
              addPageData.attr(k, v);
            }
          }
        }
      }
      $('select[name^="type"]').select2({
        language: 'zh-CN',
        theme: "bootstrap",
        data: [
          {
            id: 'number',
            text: '数字'
          }, {
            id: 'string',
            text: '字符串'
          }, {
            id: 'date',
            text: '日期'
          }
        ],
        placeholder: '选择一个类型'
      });
      reqwest({
        url: Auth.apiHost + "customize/report/allViews?_=" + (Date.now()),
        method: "get"
      }).then(function(views) {
        return reqwest({
          url: Auth.apiHost + "customize/report/allProcs?_=" + (Date.now()),
          method: "get"
        }).then(function(procs) {
          $('#value').select2({
            language: 'zh-CN',
            theme: "bootstrap",
            placeholder: '选择一个来源',
            data: [
              {
                id: 'views',
                text: '视图',
                children: _.map(views, function(e) {
                  return {
                    id: e.text,
                    text: e.text
                  };
                })
              }, {
                id: 'procs',
                text: '存储过程',
                children: _.map(procs, function(e) {
                  return {
                    id: e.text,
                    text: e.text
                  };
                })
              }
            ]
          });
          return $('#operates button[data-action="refresh"]').click();
        }).fail(function(err) {
          return bootbox.alert("存储过程列表获取失败！");
        });
      }).fail(function(err) {
        return bootbox.alert("视图列表获取失败！");
      });
      $('#value').on('change', function(e) {
        switch ($(':selected', this).parent('optGroup').attr('label')) {
          case '视图':
            return $('select[name^="type"],input[name^="param"]').val('').prop('disabled', true);
          case '存储过程':
            return $('select[name^="type"],input[name^="param"]').prop('disabled', false);
        }
      });
      return $('#operates button').unbind('click').bind('click', function() {
        var ref, ref1, report;
        switch ($(this).data('action')) {
          case 'save':
            if (!$('form').valid()) {
              return;
            }
            report = {};
            ref = addPageData.attr();
            for (k in ref) {
              v = ref[k];
              if (k !== 'pageType' && !_.isObject(v)) {
                report[k] = v;
              }
            }
            report.type = $('#value :selected').parent('optGroup').attr('label') === '视图' ? 'view' : 'proc';
            report.id = Number(report.id);
            return reqwest({
              url: Auth.apiHost + "customize/report/save",
              method: "post",
              contentType: 'application/json',
              type: 'html',
              data: JSON.stringify(report)
            }).then(function() {
              localStorage.remove('tmpCustomizeReport');
              return bootbox.alert("自定义报表" + (isNew ? '新增' : '修改') + "成功！", function() {
                return window.location.hash = "home/system/customizeReportView";
              });
            }).fail(function(err) {
              return bootbox.alert("自定义报表" + (isNew ? '新增' : '修改') + "失败！" + err.responseText);
            });
          case 'refresh':
            if (tmpCustomizeReport) {
              for (k in tmpCustomizeReport) {
                v = tmpCustomizeReport[k];
                if (!_.isObject(v)) {
                  addPageData.attr(k, v);
                }
              }
              return $('select').each(function(i, e) {
                if ($(e).attr('can-value')) {
                  return $(e).val(addPageData.attr($(e).attr('can-value'))).change();
                }
              });
            } else {
              ref1 = addPageData.attr();
              for (k in ref1) {
                v = ref1[k];
                if (k === 'pageType') {
                  continue;
                }
                if (typeof v === 'number') {
                  addPageData.attr(k, 0);
                }
                if (typeof v === 'string') {
                  addPageData.attr(k, '');
                }
              }
              return $('select').val('').trigger('change');
            }
            break;
          case 'cancel':
            return window.location.hash = "home/system/customizeReportView";
        }
      });
    }
  });
});

// Generated by CoffeeScript 1.10.0
define(['can/control', 'can', 'Auth', 'base', 'reqwest', 'bootbox', 'localStorage', 'select2cn'], function(Ctrl, can, Auth, base, reqwest, bootbox, localStorage) {
  return Ctrl.extend({
    init: function(el, data) {
      var genMenuCheck, isNew, k, roleInfo, tmpRole, v;
      if (!can.base) {
        new base('', data);
      }
      roleInfo = new can.Map({
        pageType: '新增'
      });
      this.element.html(can.view('../public/view/home/system/roleAdd.html', roleInfo));
      isNew = window.location.hash.endsWith('roleAdd');
      if (!isNew) {
        roleInfo.attr('pageType', '修改');
        tmpRole = localStorage.get('tmpRoleInfo');
        if (tmpRole) {
          for (k in tmpRole) {
            v = tmpRole[k];
            if (!_.isObject(v)) {
              roleInfo.attr(k, v);
            }
          }
        }
      }
      genMenuCheck = function(menu) {
        var $div, $input;
        $input = $('<input type="checkbox" name="menuList"/>').val(menu.id).prop('checked', !!menu.checked);
        $div = $('<div/>').addClass('checkbox').append($('<label/>').text(menu.name).prepend($input));
        return $('#menuList').append($div);
      };
      reqwest(Auth.apiHost + "user/allSysMenus?_=" + (Date.now())).then(function(menus) {
        return _.each(menus, function(menu) {
          if (tmpRole != null ? tmpRole.menuList : void 0) {
            _.each(tmpRole.menuList, function(menu0) {
              if (menu.id === menu0.id) {
                return menu.checked = true;
              }
            });
          }
          return genMenuCheck(menu);
        });
      });
      return $('#operates button').unbind('click').bind('click', function() {
        var ref, results, role;
        switch ($(this).data('action')) {
          case 'save':
            role = $('form').serializeObject();
            role.id = Number(role.id);
            if (role.menuList) {
              if (_.isArray(role.menuList)) {
                role.menuList = _.map(role.menuList, function(m) {
                  return {
                    id: Number(m)
                  };
                });
              } else {
                role.menuList = [
                  {
                    id: Number(role.menuList)
                  }
                ];
              }
            }
            return reqwest({
              url: Auth.apiHost + "user/role/save",
              method: "post",
              contentType: 'application/json',
              type: 'html',
              data: JSON.stringify(role)
            }).then(function() {
              localStorage.remove('tmpRoleInfo');
              return bootbox.alert("角色" + (isNew ? '新增' : '修改') + "成功！", function() {
                return window.location.hash = "home/system/roleView";
              });
            }).fail(function(err) {
              return bootbox.alert("角色" + (isNew ? '新增' : '修改') + "失败！" + err.responseText);
            });
          case 'refresh':
            if (tmpRole) {
              for (k in tmpRole) {
                v = tmpRole[k];
                if (!_.isObject(v)) {
                  roleInfo.attr(k, v);
                }
              }
              $('form input:checked').prop('checked', false);
              if (tmpRole.menuList) {
                return _.each(tmpRole.menuList, function(menu) {
                  return $("form input[type='checkbox'][value='" + menu.id + "']").prop('checked', true);
                });
              }
            } else {
              ref = roleInfo.attr();
              results = [];
              for (k in ref) {
                v = ref[k];
                if (k === 'pageType') {
                  continue;
                }
                if (typeof v === 'number') {
                  roleInfo.attr(k, 0);
                }
                if (typeof v === 'string') {
                  roleInfo.attr(k, '');
                }
                results.push($('form input:checked').prop('checked', false));
              }
              return results;
            }
            break;
          case 'cancel':
            return window.location.hash = "home/system/roleView";
        }
      });
    }
  });
});

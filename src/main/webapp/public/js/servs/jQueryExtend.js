// Generated by CoffeeScript 1.10.0
define(['$', 'validate'], function() {
  $.validator.setDefaults({
    highlight: function(element) {
      return $(element).closest('.form-group').addClass('has-error');
    },
    unhighlight: function(element) {
      return $(element).closest('.form-group').removeClass('has-error');
    },
    errorElement: 'span',
    errorClass: 'help-block',
    errorPlacement: function(error, element) {
      if (element.parent('.input-group').length) {
        return error.insertAfter(element.parent());
      } else {
        return error.insertAfter(element);
      }
    }
  });
  $.getJSON = function(url, data, success, error) {
    return jQuery.ajax({
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      'type': 'GET',
      'url': url,
      'data': data,
      'success': success,
      'error': error
    });
  };
  $.postJSON = function(url, data, success, error) {
    return jQuery.ajax({
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      'type': 'POST',
      'url': url,
      'data': JSON.stringify(data),
      'dataType': 'json',
      'success': success,
      'error': error
    });
  };
  return $.fn.serializeObject = function() {
    var a, o;
    o = {};
    a = this.serializeArray();
    $.each(a, function() {
      if (o[this.name] !== void 0) {
        if (!o[this.name].push) {
          o[this.name] = [o[this.name]];
        }
        return o[this.name].push(this.value || '');
      } else {
        return o[this.name] = this.value || '';
      }
    });
    return o;
  };
});
